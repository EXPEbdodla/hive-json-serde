#summary Instructions for getting started with the JSON SerDe
#labels Featured

= Getting Started =

This SerDe can be used to read data in JSON format from HDFS or S3 (if you are using AWS). For example, if your JSON files had the following contents:
{{{
{"field1":"data1","field2":100,"field3":"more data1"}
{"field1":"data2","field2":200,"field3":"more data2"}
{"field1":"data3","field2":300,"field3":"more data3"}
{"field1":"data4","field2":400,"field3":"more data4"}
}}}

The following steps can be used to read this data:

 # Build this project using ant build
 # Copy `hive-json-serde.jar` to the Hive server
 # Inside the Hive client, run
   {{{
       ADD JAR /home/hadoop/hive-json-serde.jar;
   }}}
 # Create a table that uses files where each line is JSON object
   {{{
       CREATE EXTERNAL TABLE IF NOT EXISTS my_table (
          field1 string, field2 int, field3 string
       )
       ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.JsonSerde'
       LOCATION 's3://my_data/my_table/';
   }}}       
 # Copy your JSON files to `s3://my_data/my_table/`. You can now select data using normal SELECT statements
   {{{
       SELECT * FROM my_table LIMIT 10;
   }}} 

The table does not have to have the same columns as the JSON files, and vice-versa. If the table has a column that does not exist in the JSON object, it will have a NULL value. If the JSON file contains fields that are not columns in the table, they will be ignored and not visible to the table. 